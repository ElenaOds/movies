{"version":3,"file":"static/js/38.16a79482.chunk.js","mappings":"uJAEA,MAAMA,EAAI,iPAcGC,EAAUC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oIASpBC,EAAMJ,EAAAA,GAAOK,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,idA2BhBI,EAAQP,EAAAA,GAAOQ,GAAEC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uIACxBL,GASOY,EAAOV,EAAAA,GAAOW,EAACC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2CACtBL,GAIOe,EAAWb,EAAAA,GAAOW,EAACG,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,4CAC1BL,GAIOiB,EAAUf,EAAAA,GAAOgB,KAAIC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,oD,aCpElC,MAgCA,EAhCoBe,IAAa,IAAZ,KAACC,GAAKD,EAExB,MAAM,YAAEE,EAAW,MAAEC,EAAK,SAAEC,EAAQ,eAAEC,EAAc,WAAEC,EAAU,aAAEC,EAAY,eAAEC,EAAc,aAAEC,EAAY,WAAEC,EAAU,KAAEC,EAAI,kBAAEC,GAAsBX,EAMvJ,OACEY,EAAAA,EAAAA,MAAChC,EAAO,CAAAiC,SAAA,EACNC,EAAAA,EAAAA,KAAC7B,EAAG,CACJ8B,IAAKd,EAAW,kCAAAe,OAAqCf,GAAgBgB,EACrEC,IAAKhB,GAAgBQ,KAErBE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACAC,EAAAA,EAAAA,KAAC1B,EAAK,CAAAyB,SAAEX,EAAQA,EAAMiB,cAAgBT,EAAKS,iBAC3CP,EAAAA,EAAAA,MAACrB,EAAI,CAAAsB,SAAA,EAACC,EAAAA,EAAAA,KAAClB,EAAO,CAAAiB,SAAC,mBAAyBP,EAZtB,IAAIc,KAAKd,GAAce,cACnB,IAAID,KAAKb,GAAgBc,kBAY/CT,EAAAA,EAAAA,MAACrB,EAAI,CAAAsB,SAAA,EAACC,EAAAA,EAAAA,KAAClB,EAAO,CAAAiB,SAAC,cAAoBT,KAClCO,GAAoBC,EAAAA,EAAAA,MAACrB,EAAI,CAAAsB,SAAA,EAACC,EAAAA,EAAAA,KAAClB,EAAO,CAAAiB,SAAC,cAAoBF,KACrD,MAEHC,EAAAA,EAAAA,MAACrB,EAAI,CAAAsB,SAAA,EAACC,EAAAA,EAAAA,KAAClB,EAAO,CAAAiB,SAAC,oBAA0BL,EAAac,QAAQ,GAAG,MAAIjB,MACpEO,EAAAA,EAAAA,MAACrB,EAAI,CAAAsB,SAAA,EAACC,EAAAA,EAAAA,KAAClB,EAAO,CAAAiB,SAAC,iBAAuBJ,EAAWa,QAAQ,OAC1DV,EAAAA,EAAAA,MAAClB,EAAQ,CAAAmB,SAAA,EAACC,EAAAA,EAAAA,KAAClB,EAAO,CAAAiB,SAAC,aAjBCb,EAAKuB,OAAOC,KAAIC,IAAA,IAAC,KAAEf,GAAMe,EAAA,OAAKf,CAAI,IAAEgB,KAAK,UAkB7DZ,EAAAA,EAAAA,KAACvB,EAAI,CAAAsB,SAAC,YACNC,EAAAA,EAAAA,KAACvB,EAAI,CAAAsB,SAAEV,SAGC,C,kEC7BP,MAAMwB,GAAa9C,EAAAA,EAAAA,IAAO+C,EAAAA,GAAP/C,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6pB,aCDtC,MAMA,EANiBe,IAAqB,IAApB,aAAC8B,GAAa9B,EAC9B,OACEe,EAAAA,EAAAA,KAACa,EAAU,CAACG,GAAID,EAAahB,SAAC,WAAoB,C,4GCD/C,MAAMkB,EAAUlD,EAAAA,GAAOmD,QAAOjD,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yHAOxBiD,EAAepD,EAAAA,GAAOqD,GAAE/C,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wEAMxB2C,GAAa9C,EAAAA,EAAAA,IAAO+C,EAAAA,GAAP/C,CAAYS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4pB,+BCRtC,MAiCA,EAjCqBmD,KAAO,IAADC,EAAAC,EACvB,MAAOrC,EAAMsC,IAAWC,EAAAA,EAAAA,UAAS,OAC3B,QAAEC,IAAYC,EAAAA,EAAAA,KACdC,GAAWC,EAAAA,EAAAA,MAMnB,IAJEC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,IAASL,GAASM,KAAKR,EAAQ,GAChC,CAACE,KAECxC,EACL,OAAO,KAEP,MAAM6B,EAAmC,QAAvBO,EAAiB,QAAjBC,EAAGK,EAASK,aAAK,IAAAV,OAAA,EAAdA,EAAgBW,YAAI,IAAAZ,EAAAA,EAAI,UAE7C,OACExB,EAAAA,EAAAA,MAACmB,EAAO,CAAAlB,SAAA,EACNC,EAAAA,EAAAA,KAACmC,EAAAA,EAAQ,CAACpB,aAAcA,KACxBf,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAAClD,KAAMA,KACnBY,EAAAA,EAAAA,MAACqB,EAAY,CAAApB,SAAA,EACXC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACa,EAAU,CAACG,GAAG,OAAOiB,MAAOL,EAASK,MAAMlC,SAAC,YACjDC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACa,EAAU,CAACG,GAAG,UAAUiB,MAAOL,EAASK,MAAMlC,SAAC,eACpDC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACa,EAAU,CAACG,GAAG,iBAAiBiB,MAAOL,EAASK,MAAMlC,SAAC,qBAC3DC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACa,EAAU,CAACG,GAAG,SAASiB,MAAOL,EAASK,MAAMlC,SAAC,iBAErDC,EAAAA,EAAAA,KAACqC,EAAAA,SAAQ,CAACC,SAAU,KAAKvC,UACvBC,EAAAA,EAAAA,KAACuC,EAAAA,GAAM,QAED,C","sources":["components/ItemDetails/ItemDetails.styled.js","components/ItemDetails/ItemDetails.jsx","components/LinkBack/LinksBack.styled.js","components/LinkBack/LinkBack.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst text = `\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    color: var(--secondary-text-color);\r\n\r\n    // @media (min-width: 768px) {\r\n    //     font-size: 14px;\r\n    // }\r\n\r\n    @media (min-width: 1280px) {\r\n        font-size: 16px;\r\n    }\r\n    `\r\n\r\nexport const Wrapper = styled.div`\r\n    margin-bottom: 20px;\r\n\r\n    @media (min-width: 768px) {\r\n        display: flex;\r\n        flex-direction: row;\r\n    }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n    width: 100%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-bottom: 20px;\r\n\r\n    @media (min-width: 480px) {\r\n        width: 80%;\r\n    }\r\n\r\n    @media (min-width: 640px) {\r\n        width: 60%;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        margin-bottom: 0;\r\n        margin-right: 60px;\r\n        margin-left: 0;\r\n        width: auto;\r\n        height: 370px;\r\n    }\r\n\r\n    @media (min-width: 1280px) {\r\n        height: 470px;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    ${text}\r\n    font-size: 20px;\r\n    margin-bottom: 20px;\r\n\r\n    @media (min-width: 1280px) {\r\n        font-size: 30px;\r\n    }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n    ${text}\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const LastText = styled.p`\r\n    ${text}\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const SubText = styled.span`\r\n    color: var(--additional-text-color);\r\n`","import noimage from '../../assets/imgs/Noimage.jpg';\r\n\r\nimport { Wrapper, Img, Title, Text, SubText, LastText } from './ItemDetails.styled';\r\n\r\nconst ItemDetails = ({item}) => {\r\n\r\n   const { poster_path, title, overview, origin_country, vote_count, release_date, first_air_date, vote_average, popularity, name, number_of_seasons } = item;\r\n\r\n  const getYear = () => new Date(release_date).getFullYear();\r\n  const getShowYear = () => new Date(first_air_date).getFullYear();\r\n  const getGenre = () => (item.genres.map(({ name }) => name).join(', '));\r\n  \r\n  return (\r\n    <Wrapper>\r\n      <Img\r\n      src={poster_path ? `https://image.tmdb.org/t/p/w300${poster_path}` : noimage}\r\n      alt={title ? title : name}\r\n      />\r\n      <div>\r\n      <Title>{title ? title.toUpperCase() : name.toUpperCase()}</Title>\r\n      <Text><SubText>Release date: </SubText>{release_date ? getYear() : getShowYear()}</Text>\r\n      <Text><SubText>Country: </SubText>{origin_country}</Text> \r\n      {number_of_seasons ? <Text><SubText>Seanons: </SubText>{number_of_seasons}</Text>\r\n       : null }\r\n      \r\n      <Text><SubText>Vote / Voutes: </SubText>{vote_average.toFixed(1)} / {vote_count}</Text> \r\n       <Text><SubText>Popularity: </SubText>{popularity.toFixed(0)}</Text> \r\n      <LastText><SubText>Genres: </SubText>{getGenre()}</LastText> \r\n      <Text>ABOUT:</Text>\r\n      <Text>{overview}</Text>  \r\n   \r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ItemDetails\r\n","import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   text-align: center;\r\n   font-weight: 500;\r\n   font-size: 12px;\r\n   color: var(--text-color);\r\n   padding: 3px;\r\n   background: linear-gradient(-45deg, #000, #ff0000, #000, #ff0000);\r\n   margin-bottom: 16px;\r\n   width: 60px;\r\n   border-radius: 5px;\r\n   background-size: 300%;\r\n   background-position: 50% 0;\r\n   transition: background 0.8s;\r\n\r\n   @media (min-width: 768px) {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  @media (min-width: 1280px) {\r\n    font-size: 14px;\r\n    width: 70px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n   &:hover,\r\n   &:focus {\r\n    background-position: 150% 50%;\r\n    outline: none;\r\n   }\r\n`","import { StyledLink } from './LinksBack.styled';\r\n\r\nconst LinkBack = ({backLinkHref}) => {\r\n  return (\r\n    <StyledLink to={backLinkHref}>Go back</StyledLink>\r\n  )\r\n}\r\n\r\nexport default LinkBack\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Section = styled.section`\r\n    padding: 20px 20px;  \r\n   \r\n    @media screen and (min-width: 768px) {\r\n        padding: 32px 32px;   \r\n}\r\n`\r\nexport const LinksWrapper = styled.ul`\r\n    display: flex;\r\n    gap: 12px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    color: var(--text-color);\r\n    padding: 3px;\r\n    background: linear-gradient(-45deg, #000, #ff0000, #000, #ff0000);\r\n    border-radius: 5px;\r\n    background-size: 300%;\r\n    background-position: 50% 0;\r\n    transition: background 0.8s;\r\n   \r\n\r\n    @media (min-width: 768px) {\r\n        font-size: 14px;\r\n        padding: 4px;\r\n    }\r\n\r\n    @media (min-width: 1280px) {\r\n        font-size: 16px;\r\n        padding: 5px;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n        background-position: 150% 50%;\r\n        outline: none;\r\n    }\r\n`;","import { useParams, useLocation, Outlet } from \"react-router-dom\";\r\nimport { useState, useEffect, Suspense } from 'react';\r\nimport { getMovie } from '../../services/moviesApi';\r\nimport { Section, LinksWrapper, StyledLink } from './MovieDetails.styled.js';\r\nimport LinkBack from \"../../components/LinkBack/LinkBack.jsx\";\r\nimport ItemDetails from \"../../components/ItemDetails/ItemDetails.jsx\";\r\n\r\n\r\nconst MovieDetails = () => {\r\n    const [item, setItem] = useState(null);\r\n    const { movieId } = useParams();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n      getMovie(movieId).then(setItem);\r\n  }, [movieId]);\r\n\r\n  if (!item) \r\n  return null;\r\n\r\n  const backLinkHref = location.state?.from ?? \"/movies\";\r\n\r\n  return (\r\n    <Section>\r\n      <LinkBack backLinkHref={backLinkHref}/>\r\n      <ItemDetails item={item}/>\r\n      <LinksWrapper>\r\n        <li><StyledLink to='cast' state={location.state}>Cast</StyledLink></li>\r\n        <li><StyledLink to='reviews' state={location.state}>Reviews</StyledLink></li>\r\n        <li><StyledLink to='recommendation' state={location.state}>Recommedation</StyledLink></li>\r\n        <li><StyledLink to='images' state={location.state}>Images</StyledLink></li>\r\n      </LinksWrapper>\r\n      <Suspense fallback={null}>\r\n        <Outlet />\r\n      </Suspense>        \r\n    </Section>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default MovieDetails;\r\n"],"names":["text","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Img","img","_templateObject2","Title","h2","_templateObject3","Text","p","_templateObject4","LastText","_templateObject5","SubText","span","_templateObject6","_ref","item","poster_path","title","overview","origin_country","vote_count","release_date","first_air_date","vote_average","popularity","name","number_of_seasons","_jsxs","children","_jsx","src","concat","noimage","alt","toUpperCase","Date","getFullYear","toFixed","genres","map","_ref2","join","StyledLink","Link","backLinkHref","to","Section","section","LinksWrapper","ul","MovieDetails","_location$state$from","_location$state","setItem","useState","movieId","useParams","location","useLocation","useEffect","getMovie","then","state","from","LinkBack","ItemDetails","Suspense","fallback","Outlet"],"sourceRoot":""}