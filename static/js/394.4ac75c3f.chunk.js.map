{"version":3,"file":"static/js/394.4ac75c3f.chunk.js","mappings":"+LAIO,MAAMA,EAAaC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4dA2B7BC,EAAI,0GAOOC,EAAYL,EAAAA,GAAOM,EAACC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gLAC/BC,GAUOI,EAAMR,EAAAA,GAAOS,IAAGC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6BAIhBQ,EAAkBX,EAAAA,GAAOY,IAAGC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,mEAK5BW,EAAWd,EAAAA,GAAOM,EAACS,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,uHAC1BC,GAQOY,EAAchB,EAAAA,GAAOY,IAAGK,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,4B,wFCjE9B,MAAMe,EAAUlB,EAAAA,GAAOmB,QAAOjB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yHAQxBiB,EAAOpB,EAAAA,GAAOqB,GAAEd,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kG,6BCL7B,MAoBA,EApBmBmB,IAAe,IAAd,OAACC,GAAOD,EAC5B,MAAM,GAAEE,EAAE,KAAEC,EAAI,aAAEC,EAAY,qBAAEC,GAAyBJ,EAEvD,OACEK,EAAAA,EAAAA,MAAC7B,EAAAA,GAAU,CAAA8B,SAAA,EACXC,EAAAA,EAAAA,KAACtB,EAAAA,GAAG,CACAuB,IAAKL,EAAY,kCAAAM,OAAqCN,GAAiBO,EACvEC,IAAKT,KAETG,EAAAA,EAAAA,MAACZ,EAAAA,GAAW,CAAAa,SAAA,EACZC,EAAAA,EAAAA,KAACzB,EAAAA,GAAS,CAAAwB,SAAEJ,EAAKU,iBACjBL,EAAAA,EAAAA,KAACnB,EAAAA,GAAe,CAAAkB,UACZC,EAAAA,EAAAA,KAAChB,EAAAA,GAAQ,CAAAe,SAAEF,WAREH,EAYR,ECYb,EA5BeY,KACX,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAezC,OAbEC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAM,QAAEC,SAAkBC,EAAAA,EAAAA,MAC1BL,EAAW,IAAII,IACfE,QAAQC,IAAIH,EACd,CAAE,MAAOI,GACPF,QAAQE,MAAMA,EAChB,GAEFC,EAAW,GACV,KAGHjB,EAAAA,EAAAA,KAACZ,EAAO,CAAAW,UACRC,EAAAA,EAAAA,KAACV,EAAI,CAAAS,SACAQ,EAAQW,KAAIzB,IACJO,EAAAA,EAAAA,KAACmB,EAAU,CAAiB1B,OAAQA,GAAnBA,EAAOC,SAI7B,C,yEC3BZ,MAAM0B,EAAM,mCAENC,EAAYC,EAAAA,EAAMC,OAAO,CAC3BC,QAAS,kCAGEC,EAAkBd,UAC7B,MAAM,KAAEe,SAAeL,EAAUM,IAAI,mBAAoB,CACvDC,OAAQ,CACNC,QAAST,KAGb,OAAOM,CAAI,EAGAI,EAAoBnB,UAC/B,MAAM,KAAEe,SAAeL,EAAUM,IAAI,qBAAsB,CACzDC,OAAQ,CACNC,QAAST,KAGb,OAAOM,CAAI,EAGAK,EAAmBpB,UAC9B,MAAM,KAAEe,SAAeL,EAAUM,IAAI,kBAAmB,CACtDC,OAAQ,CACNC,QAAST,KAGb,OAAOM,CAAI,EAGAb,EAAoBF,UAC/B,MAAM,KAAEe,SAAeL,EAAUM,IAAI,sBAAuB,CAC1DC,OAAQ,CACNC,QAAST,KAGb,OAAOM,CAAI,C","sources":["components/Card/Card.styled.js","pages/Person/Person.styled.jsx","components/Card/PersonCard.jsx","pages/Person/Person.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\n\r\nexport const StyledCard = styled.li`\r\ndisplay: flex;\r\nflex-direction: column;\r\nwidth: 100%;\r\noverflow: hidden;\r\nbox-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12),\r\n        0px 1px 1px rgba(0, 0, 0, 0.14),\r\n        0px 2px 1px rgba(0, 0, 0, 0.2);\r\n\r\n\r\n@media (min-width: 320px) {\r\n    width: 80%;\r\n  }\r\n\r\n    @media (min-width: 640px) {\r\n        width: 48%;\r\n      }\r\n      \r\n      @media (min-width: 768px) {\r\n        width: 31%;\r\n      }\r\n\r\n      @media (min-width: 1280px) {\r\n        width: 23.7%;\r\n      }\r\n`\r\n\r\nconst text = `\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 1.2;\r\n    letter-spacing: 0.02em;\r\n    `\r\n\r\n    export const CardTitle = styled.p`\r\n    ${text}\r\n    overflow: hidden;\r\n    color: var(--secondary-text-color);\r\n    margin-bottom: 4px;\r\n\r\n    @media (min-width: 1280px) {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n    height: 100%;\r\n`\r\n\r\nexport const CardInfoWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const CardText = styled.p`\r\n    ${text}\r\n    color: var(--hover-color);\r\n\r\n    @media (min-width: 1280px) {\r\n        font-size: 14px;\r\n    }\r\n`\r\n\r\nexport const CardWrapper = styled.div`\r\n    padding: 8px;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n    padding: 20px 20px;  \r\n   \r\n    @media screen and (min-width: 768px) {\r\n        padding: 32px 32px;   \r\n}\r\n`\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n    justify-content: center;\r\n`","import noimage from '../../assets/imgs/Noimage.jpg'\r\n\r\nimport { StyledCard, CardTitle, Img, CardWrapper,CardInfoWrapper, CardText } from './Card.styled';\r\n\r\n\r\nconst PersonCard = ({person}) => {\r\nconst { id, name, profile_path, known_for_department } = person;\r\n\r\n  return (\r\n    <StyledCard key={id}>\r\n    <Img\r\n        src={profile_path ? `https://image.tmdb.org/t/p/w300${profile_path}` : noimage}\r\n        alt={name}\r\n    /> \r\n    <CardWrapper>\r\n    <CardTitle>{name.toUpperCase()}</CardTitle>\r\n    <CardInfoWrapper>\r\n        <CardText>{known_for_department}</CardText> \r\n       \r\n        </CardInfoWrapper>\r\n    </CardWrapper>\r\n</StyledCard>\r\n  )\r\n}\r\n\r\nexport default PersonCard\r\n","import { useEffect, useState } from 'react'\r\nimport { getTrendingPerson } from '../../services/moviesApi';\r\nimport { Section, List } from './Person.styled';\r\nimport PersonCard from '../../components/Card/PersonCard';\r\n\r\nconst Person = () => {\r\n    const [persons, setPersons] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { results } = await getTrendingPerson();\r\n          setPersons([...results]);\r\n          console.log(results)\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n      fetchData();\r\n    }, []);\r\n  \r\n  return (\r\n    <Section>\r\n    <List>\r\n        {persons.map(person => {\r\n          return <PersonCard key={person.id} person={person}/>\r\n    })}\r\n    </List>\r\n  \r\n  </Section>\r\n  )\r\n}\r\n\r\nexport default Person\r\n","import axios from \"axios\";\r\n\r\nconst KEY = '56fe42c945e3ca855df6abfdcd1328f7';\r\n\r\nconst moviesApi = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n  });\r\n\r\n  export const getTrendingData = async () => {\r\n    const { data } = await moviesApi.get(`trending/all/day`, {\r\n      params: {\r\n        api_key: KEY,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n  export const getTrendingMovies = async () => {\r\n    const { data } = await moviesApi.get(`trending/movie/day`, {\r\n      params: {\r\n        api_key: KEY,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n  export const getTrendingShows = async () => {\r\n    const { data } = await moviesApi.get(`trending/tv/day`, {\r\n      params: {\r\n        api_key: KEY,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n  export const getTrendingPerson = async () => {\r\n    const { data } = await moviesApi.get(`trending/person/day`, {\r\n      params: {\r\n        api_key: KEY,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n  export const getMovieGenre = async () => {\r\n    const { data } = await moviesApi.get(`/genre/movie/list`, {\r\n      params: {\r\n        api_key: KEY,\r\n        language: 'en-US',\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n\r\n  export const searchQuery = async query => {\r\n    const { data } = await moviesApi.get(`/search/multi`, {\r\n      params: {\r\n        api_key: KEY,\r\n        language: 'en-US',\r\n        page: 1,\r\n        include_adult: false,\r\n        query,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n  "],"names":["StyledCard","styled","li","_templateObject","_taggedTemplateLiteral","text","CardTitle","p","_templateObject2","Img","img","_templateObject3","CardInfoWrapper","div","_templateObject4","CardText","_templateObject5","CardWrapper","_templateObject6","Section","section","List","ul","_ref","person","id","name","profile_path","known_for_department","_jsxs","children","_jsx","src","concat","noimage","alt","toUpperCase","Person","persons","setPersons","useState","useEffect","async","results","getTrendingPerson","console","log","error","fetchData","map","PersonCard","KEY","moviesApi","axios","create","baseURL","getTrendingData","data","get","params","api_key","getTrendingMovies","getTrendingShows"],"sourceRoot":""}