{"version":3,"file":"static/js/234.7fc34535.chunk.js","mappings":"iJAEA,MAAMA,EAAM,mCAENC,EAAYC,EAAAA,EAAMC,OAAO,CAC3BC,QAAS,kC,mECHb,MAeA,EAfaC,IAAc,IAAb,MAACC,GAAMD,EACjB,MAAM,WAACE,EAAU,YAAEC,EAAW,KAAEC,EAAI,MAAEC,EAAK,aAAEC,EAAY,GAAEC,EAAE,eAAEC,GAAmBP,EAElF,OACAQ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OACIC,IAAKT,EAAW,kCAAAU,OAAqCV,GAAgBW,EACrEC,IAAoB,UAAfb,EAAyBG,EAAQD,KAE1CO,EAAAA,EAAAA,KAAA,KAAAD,SAAmB,UAAfR,EAAyBG,EAAQD,KACrCO,EAAAA,EAAAA,KAAA,KAAAD,SAAmB,UAAfR,EAAyB,IAAIc,KAAKV,GAAcW,cAAgB,IAAID,KAAKR,GAAgBS,kBANxFV,EAOJ,E,eCXF,MAAMW,E,OAAUC,GAAOC,QAAOC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yHCkCrC,EA9BaC,KACX,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAiBrC,OAfAC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAM,QAAEC,QHJiBD,WAC7B,MAAM,KAAEE,SAAelC,EAAUmC,IAAI,mBAAoB,CACvDC,OAAQ,CACNC,QAAStC,KAGb,OAAOmC,CAAI,EGFmBI,GAC1BT,EAAU,IAAII,IACdM,QAAQC,IAAIP,EACd,CAAE,MAAOQ,GACPF,QAAQE,MAAMA,EAChB,GAEFC,EAAW,GACV,KAKD3B,EAAAA,EAAAA,KAACO,EAAO,CAAAR,UACNC,EAAAA,EAAAA,KAAA,MAAAD,SACKc,EAAOe,KAAItC,IACHU,EAAAA,EAAAA,KAAC6B,EAAI,CAAgBvC,MAAOA,GAAjBA,EAAMM,SAItB,C","sources":["services/moviesApi.js","components/Card/Card.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst KEY = '56fe42c945e3ca855df6abfdcd1328f7';\r\n\r\nconst moviesApi = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n  });\r\n\r\n  export const getTrendingData = async () => {\r\n    const { data } = await moviesApi.get(`trending/all/day`, {\r\n      params: {\r\n        api_key: KEY,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n  export const getTrendingMovies = async () => {\r\n    const { data } = await moviesApi.get(`trending/movie/day`, {\r\n      params: {\r\n        api_key: KEY,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n  export const getTrendingShows = async () => {\r\n    const { data } = await moviesApi.get(`trending/tv/day`, {\r\n      params: {\r\n        api_key: KEY,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n  export const getTrendingPerson = async () => {\r\n    const { data } = await moviesApi.get(`trending/person/day`, {\r\n      params: {\r\n        api_key: KEY,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n  export const getMovieGenre = async () => {\r\n    const { data } = await moviesApi.get(`/genre/movie/list`, {\r\n      params: {\r\n        api_key: KEY,\r\n        language: 'en-US',\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n\r\n\r\n  export const searchQuery = async query => {\r\n    const { data } = await moviesApi.get(`/search/multi`, {\r\n      params: {\r\n        api_key: KEY,\r\n        language: 'en-US',\r\n        page: 1,\r\n        include_adult: false,\r\n        query,\r\n      },\r\n    });\r\n    return data;\r\n  };\r\n  ","import noimage from '../../assets/imgs/Noimage.jpg'\r\n\r\nconst Card = ({video}) => {\r\n    const {media_type, poster_path, name, title, release_date, id, first_air_date } = video;\r\n\r\n    return (\r\n    <li key={id}>\r\n        <img\r\n            src={poster_path ? `https://image.tmdb.org/t/p/w300${poster_path}` : noimage}\r\n            alt={media_type === \"movie\" ? title : name}\r\n        /> \r\n        <p>{media_type === \"movie\" ? title : name}</p>\r\n        <p>{media_type === \"movie\" ? new Date(release_date).getFullYear() : new Date(first_air_date).getFullYear()}</p> \r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n    padding: 20px 20px;  \r\n   \r\n    @media screen and (min-width: 768px) {\r\n        padding: 32px 32px;   \r\n}\r\n`","import { useEffect, useState } from 'react'\r\nimport { getTrendingData } from '../../services/moviesApi';\r\nimport Card from '../../components/Card/Card';\r\n\r\nimport { Section } from './Home.styled'\r\n\r\nconst Home = () => {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { results } = await getTrendingData();\r\n        setVideos([...results]);\r\n        console.log(results)\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n   \r\n  \r\n  return (\r\n    <Section>\r\n      <ul>\r\n          {videos.map(video => {\r\n            return <Card key={video.id} video={video}/>\r\n      })}\r\n      </ul>\r\n    \r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"names":["KEY","moviesApi","axios","create","baseURL","_ref","video","media_type","poster_path","name","title","release_date","id","first_air_date","_jsxs","children","_jsx","src","concat","noimage","alt","Date","getFullYear","Section","styled","section","_templateObject","_taggedTemplateLiteral","Home","videos","setVideos","useState","useEffect","async","results","data","get","params","api_key","getTrendingData","console","log","error","fetchData","map","Card"],"sourceRoot":""}