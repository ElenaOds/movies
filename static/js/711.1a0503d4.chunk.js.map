{"version":3,"file":"static/js/711.1a0503d4.chunk.js","mappings":"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","sources":["components/Card/Card.styled.js","components/Card/Card.jsx","pages/TvShows/TvShows.styled.jsx","pages/TvShows/TvShows.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n   text-decoration: none;\r\n`;\r\n\r\nexport const StyledCard = styled.li`\r\nwidth: 100%;\r\nmargin-bottom: 20px;\r\nbox-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12),\r\n        0px 1px 1px rgba(0, 0, 0, 0.14),\r\n        0px 2px 1px rgba(0, 0, 0, 0.2);\r\n\r\n\r\n    @media (min-width: 480px) {\r\n        width: calc((100% - 4 * 10px) / 2);\r\n        margin: 10px;\r\n    }\r\n\r\n    @media (min-width: 640px) {\r\n        width: calc((100% - 6 * 10px) / 3);\r\n      }\r\n      \r\n      @media (min-width: 768px) {\r\n        width: calc((100% - 8 * 10px) / 4);\r\n      }\r\n\r\n      @media (min-width: 1280px) {\r\n        width: calc((100% - 10 * 10px) / 5);\r\n      }\r\n`;\r\n\r\nexport const GeneralWrapper = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: end;\r\n`;\r\n\r\nconst text = `\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    `\r\n\r\n    export const CardTitle = styled.p`\r\n    ${text}\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    color: var(--secondary-text-color);\r\n    margin-bottom: 4px;\r\n\r\n    @media (min-width: 1280px) {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\n\r\nexport const CardInfoWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const CardText = styled.p`\r\n    ${text}\r\n    color: var(--hover-color);\r\n\r\n    @media (min-width: 1280px) {\r\n        font-size: 14px;\r\n    }\r\n`\r\n\r\nexport const CardWrapper = styled.div`\r\n    padding: 8px;\r\n`","import noimage from '../../assets/imgs/Noimage.jpg';\r\n\r\nimport { StyledCard, StyledLink, CardTitle, CardInfoWrapper, CardText, CardWrapper, GeneralWrapper } from './Card.styled';\r\n\r\nconst Card = ({item, state}) => {\r\n    const {media_type, poster_path, name, title, release_date, id, first_air_date, profile_path, known_for_department } = item;\r\n    \r\n\r\n    return (\r\n    <StyledCard key={id}>\r\n        <StyledLink to={\r\n                media_type === \"movie\" ? `/movies/${id}` : \r\n                media_type === \"tv\" ? `/tv-shows/${id}` :\r\n                media_type === \"person\" ? `/person/${id}` : null} \r\n            key={id} id={id} state={state}>\r\n        <GeneralWrapper>\r\n        <img\r\n            src={poster_path ? `https://image.tmdb.org/t/p/w300${poster_path}` : \r\n                profile_path ? `https://image.tmdb.org/t/p/w300${profile_path}` : noimage}\r\n            alt={media_type === \"movie\" ? title : name}\r\n        /> \r\n        <CardWrapper>\r\n        <CardTitle>{media_type === \"movie\" ? title.toUpperCase() : name.toUpperCase()}</CardTitle>\r\n        <CardInfoWrapper>\r\n        <CardText>{media_type === \"movie\" ? new Date(release_date).getFullYear() : \r\n        media_type === \"tv\" ? new Date(first_air_date).getFullYear() :\r\n        media_type === \"person\" ? known_for_department : null}</CardText> \r\n        <CardText>{media_type === \"movie\" ? media_type.charAt(0).toUpperCase() + media_type.slice(1) :\r\n                    media_type === \"tv\" ?  'TV-Show' : null}</CardText> \r\n        </CardInfoWrapper>\r\n        </CardWrapper>\r\n        </GeneralWrapper>\r\n        </StyledLink>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n    padding: 20px 20px;  \r\n   \r\n    @media screen and (min-width: 768px) {\r\n        padding: 32px 32px;   \r\n}\r\n`\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin: -10px;\r\n`","import { useEffect, useState } from 'react';\r\nimport { useLocation  } from \"react-router-dom\";\r\nimport { getTrendingShows } from '../../services/moviesApi';\r\nimport { Section, List } from './TvShows.styled';\r\nimport Card from '../../components/Card/Card';\r\n\r\nconst TvShows = () => {\r\n  const location = useLocation();\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { results } = await getTrendingShows();\r\n        setItems([...results]);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <Section>\r\n    <List>\r\n        {items.map(item => {\r\n          return <Card key={item.id} item={item} state={{from: location}}/>\r\n    })}\r\n    </List>\r\n  \r\n  </Section>\r\n  )\r\n}\r\n\r\nexport default TvShows\r\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","StyledCard","li","_templateObject2","GeneralWrapper","div","_templateObject3","text","CardTitle","p","_templateObject4","CardInfoWrapper","_templateObject5","CardText","_templateObject6","CardWrapper","_templateObject7","_ref","item","state","media_type","poster_path","name","title","release_date","id","first_air_date","profile_path","known_for_department","_jsx","children","to","concat","_jsxs","src","noimage","alt","toUpperCase","Date","getFullYear","charAt","slice","Section","section","List","ul","TvShows","location","useLocation","items","setItems","useState","useEffect","async","results","getTrendingShows","error","console","fetchData","map","Card","from"],"sourceRoot":""}