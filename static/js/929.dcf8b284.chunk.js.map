{"version":3,"file":"static/js/929.dcf8b284.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","components/LinkBack/LinksBack.styled.js","components/LinkBack/LinkBack.jsx","components/ItemDetails/ItemDetails.styled.js","components/ItemDetails/ItemDetails.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Section = styled.section`\r\n    padding: 20px 20px;  \r\n   \r\n    @media screen and (min-width: 768px) {\r\n        padding: 32px 32px;   \r\n}\r\n`\r\nexport const LinksWrapper = styled.ul`\r\n    display: flex;\r\n    gap: 12px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    color: var(--text-color);\r\n    padding: 3px;\r\n    background: linear-gradient(-45deg, #000, #ff0000, #000, #ff0000);\r\n    border-radius: 5px;\r\n    background-size: 300%;\r\n    background-position: 50% 0;\r\n    transition: background 0.8s;\r\n   \r\n\r\n    @media (min-width: 768px) {\r\n        font-size: 14px;\r\n        padding: 4px;\r\n    }\r\n\r\n    @media (min-width: 1280px) {\r\n        font-size: 16px;\r\n        padding: 5px;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n        background-position: 150% 50%;\r\n        outline: none;\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   text-align: center;\r\n   font-weight: 500;\r\n   font-size: 12px;\r\n   color: var(--text-color);\r\n   padding: 3px;\r\n   background: linear-gradient(-45deg, #000, #ff0000, #000, #ff0000);\r\n   margin-bottom: 16px;\r\n   width: 60px;\r\n   border-radius: 5px;\r\n   background-size: 300%;\r\n   background-position: 50% 0;\r\n   transition: background 0.8s;\r\n\r\n   @media (min-width: 768px) {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  @media (min-width: 1280px) {\r\n    font-size: 14px;\r\n    width: 70px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n   &:hover,\r\n   &:focus {\r\n    background-position: 150% 50%;\r\n    outline: none;\r\n   }\r\n`","import { StyledLink } from './LinksBack.styled';\r\n\r\nconst LinkBack = ({backLinkHref}) => {\r\n  return (\r\n    <StyledLink to={backLinkHref}>Go back</StyledLink>\r\n  )\r\n}\r\n\r\nexport default LinkBack\r\n","import styled from 'styled-components';\r\n\r\nconst text = `\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    color: var(--secondary-text-color);\r\n\r\n    // @media (min-width: 768px) {\r\n    //     font-size: 14px;\r\n    // }\r\n\r\n    @media (min-width: 1280px) {\r\n        font-size: 16px;\r\n    }\r\n    `\r\n\r\nexport const Wrapper = styled.div`\r\n    margin-bottom: 20px;\r\n\r\n    @media (min-width: 768px) {\r\n        display: flex;\r\n        flex-direction: row;\r\n    }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n    width: 100%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-bottom: 20px;\r\n\r\n    @media (min-width: 480px) {\r\n        width: 80%;\r\n    }\r\n\r\n    @media (min-width: 640px) {\r\n        width: 60%;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        margin-bottom: 0;\r\n        margin-right: 60px;\r\n        margin-left: 0;\r\n        width: auto;\r\n        height: 370px;\r\n    }\r\n\r\n    @media (min-width: 1280px) {\r\n        height: 470px;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    ${text}\r\n    font-size: 20px;\r\n    margin-bottom: 20px;\r\n\r\n    @media (min-width: 1280px) {\r\n        font-size: 30px;\r\n    }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n    ${text}\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const LastText = styled.p`\r\n    ${text}\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const SubText = styled.span`\r\n    color: var(--additional-text-color);\r\n`","import noimage from '../../assets/imgs/Noimage.jpg';\r\n\r\nimport { Wrapper, Img, Title, Text, SubText, LastText } from './ItemDetails.styled';\r\n\r\nconst ItemDetails = ({item}) => {\r\n\r\n   const { poster_path, title, overview, origin_country, vote_count, release_date, vote_average, popularity } = item;\r\n\r\n  const getYear = () => new Date(release_date).getFullYear();\r\n  const getGenre = () => (item.genres.map(({ name }) => name).join(', '));\r\n  return (\r\n    <Wrapper>\r\n      <Img\r\n      src={poster_path ? `https://image.tmdb.org/t/p/w300${poster_path}` : noimage}\r\n      alt={title}\r\n      />\r\n      <div>\r\n      <Title>{title.toUpperCase()}</Title>\r\n      <Text><SubText>Release date: </SubText>{getYear()}</Text>\r\n      <Text><SubText>Country: </SubText>{origin_country}</Text>\r\n      <Text><SubText>Vote / Voutes: </SubText>{vote_average.toFixed(1)} / {vote_count}</Text>\r\n      <Text><SubText>Popularity: </SubText>{popularity.toFixed(1)}</Text>\r\n      <LastText><SubText>Genres: </SubText>{getGenre()}</LastText>\r\n      <Text>ABOUT:</Text>\r\n      <Text>{overview}</Text> \r\n   \r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ItemDetails\r\n","import { useParams, useLocation, Outlet } from \"react-router-dom\";\r\nimport { useState, useEffect, Suspense } from 'react';\r\nimport { getMovie } from '../../services/moviesApi';\r\nimport { Section, LinksWrapper, StyledLink } from './MovieDetails.styled.js';\r\nimport LinkBack from \"../../components/LinkBack/LinkBack.jsx\";\r\nimport ItemDetails from \"../../components/ItemDetails/ItemDetails.jsx\";\r\n\r\n\r\nconst MovieDetails = () => {\r\n    const [item, setItem] = useState(null);\r\n    const { movieId } = useParams();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n      getMovie(movieId).then(setItem);\r\n  }, [movieId]);\r\n\r\n  if (!item) \r\n  return null;\r\n\r\n  const backLinkHref = location.state?.from ?? \"/movies\";\r\n\r\n  return (\r\n    <Section>\r\n      <LinkBack backLinkHref={backLinkHref}/>\r\n      <ItemDetails item={item}/>\r\n      <LinksWrapper>\r\n        <li><StyledLink to='cast' state={location.state}>Cast</StyledLink></li>\r\n        <li><StyledLink to='reviews' state={location.state}>Reviews</StyledLink></li>\r\n        <li><StyledLink to='recommendation' state={location.state}>Recommedation</StyledLink></li>\r\n        <li><StyledLink to='images' state={location.state}>Images</StyledLink></li>\r\n      </LinksWrapper>\r\n      <Suspense fallback={null}>\r\n        <Outlet />\r\n      </Suspense>        \r\n    </Section>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default MovieDetails\r\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","LinksWrapper","ul","_templateObject2","StyledLink","Link","_templateObject3","_ref","backLinkHref","_jsx","to","children","text","Wrapper","div","Img","img","Title","h2","Text","p","_templateObject4","LastText","_templateObject5","SubText","span","_templateObject6","item","poster_path","title","overview","origin_country","vote_count","release_date","vote_average","popularity","_jsxs","src","concat","noimage","alt","toUpperCase","Date","getFullYear","toFixed","genres","map","_ref2","name","join","MovieDetails","_location$state$from","_location$state","setItem","useState","movieId","useParams","location","useLocation","useEffect","getMovie","then","state","from","LinkBack","ItemDetails","Suspense","fallback","Outlet"],"sourceRoot":""}