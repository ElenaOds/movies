{"version":3,"file":"static/js/30.499287d1.chunk.js","mappings":"qLAEO,MAAMA,EAAUC,EAAAA,GAAOC,QAAOC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yH,MCC9B,MAAMC,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+oB,aCDtC,MAMA,EANiBG,IAAqB,IAApB,aAACC,GAAaD,EAC9B,OACEE,EAAAA,EAAAA,KAACJ,EAAU,CAACK,GAAIF,EAAaG,SAAC,WAAoB,E,WCAtD,MAsBA,EAtBoBJ,IAAa,IAAZ,KAACK,GAAKL,EAExB,MAAM,YAAEM,EAAW,MAAEC,EAAK,SAAEC,GAAaH,EAK1C,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAN,SAAA,EACEF,EAAAA,EAAAA,KAAA,OACAS,IAAKL,EAAW,kCAAAM,OAAqCN,GAAgBO,EACrEC,IAAKP,KAELL,EAAAA,EAAAA,KAAA,KAAAE,SAAIG,KACJE,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,iBAVe,IAAIW,KAAKV,EAAKW,cAAcC,kBAW9CR,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,UAViBc,KAAKC,MAA0B,GAApBd,EAAKe,cAAqB,QAWzDX,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,WAViBC,EAAKgB,OAAOC,KAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAAKC,CAAI,IAAEC,KAAK,UAW7DhB,EAAAA,EAAAA,MAAA,KAAAL,SAAA,CAAG,YAAUI,OACZ,ECsBP,EApCqBkB,KAAO,IAADC,EAAAC,EACvB,MAAOvB,EAAMwB,IAAWC,EAAAA,EAAAA,UAAS,OAC3B,QAAEC,IAAYC,EAAAA,EAAAA,KACdC,GAAWC,EAAAA,EAAAA,MAMnB,IAJEC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,IAASL,GAASM,KAAKR,EAAQ,GAChC,CAACE,KAEC1B,EACL,OAAO,KAEP,MAAMJ,EAAmC,QAAvB0B,EAAiB,QAAjBC,EAAGK,EAASK,aAAK,IAAAV,OAAA,EAAdA,EAAgBW,YAAI,IAAAZ,EAAAA,EAAI,UAE7C,OACElB,EAAAA,EAAAA,MAAChB,EAAO,CAAAW,SAAA,EACNF,EAAAA,EAAAA,KAACsC,EAAQ,CAACvC,aAAcA,KACxBC,EAAAA,EAAAA,KAACuC,EAAW,CAACpC,KAAMA,KAEnBH,EAAAA,EAAAA,KAAA,KAAAE,SAAG,4BACGK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACAF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAACH,EAAAA,GAAI,CAACI,GAAG,OAAOmC,MAAOL,EAASK,MAAMlC,SAAC,YAC3CF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAACH,EAAAA,GAAI,CAACI,GAAG,UAAUmC,MAAOL,EAASK,MAAMlC,SAAC,eAC9CF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAACH,EAAAA,GAAI,CAACI,GAAG,iBAAiBmC,MAAOL,EAASK,MAAMlC,SAAC,qBACrDF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAACH,EAAAA,GAAI,CAACI,GAAG,SAASmC,MAAOL,EAASK,MAAMlC,SAAC,iBAE7CF,EAAAA,EAAAA,KAACwC,EAAAA,SAAQ,CAACC,SAAU,KAAKvC,UACzBF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,QAGL,C","sources":["pages/MovieDetails/MovieDetails.styled.js","components/LinkBack/LinksBack.styled.js","components/LinkBack/LinkBack.jsx","components/ItemDetails/ItemDetails.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n    padding: 20px 20px;  \r\n   \r\n    @media screen and (min-width: 768px) {\r\n        padding: 32px 32px;   \r\n}\r\n`","import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   text-align: center;\r\n   font-weight: 500;\r\n   font-size: 12px;\r\n   color: var(--text-color);\r\n   padding: 3px;\r\n   background: linear-gradient(-45deg, #000, #ff0000, #000, #ff0000);\r\n   margin-bottom: 16px;\r\n   width: 60px;\r\n   border-radius: 5px;\r\n   background-size: 300%;\r\n   background-position: 50% 0;\r\n   transition: background 0.8s;\r\n\r\n   @media (min-width: 768px) {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  @media (min-width: 1280px) {\r\n    font-size: 14px;\r\n    width: 70px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n\r\n\r\n\r\n   &:hover,\r\n   &:focus {\r\n    background-position: 150% 50%;\r\n   }\r\n`","import { StyledLink } from './LinksBack.styled';\r\n\r\nconst LinkBack = ({backLinkHref}) => {\r\n  return (\r\n    <StyledLink to={backLinkHref}>Go back</StyledLink>\r\n  )\r\n}\r\n\r\nexport default LinkBack\r\n","import noimage from '../../assets/imgs/Noimage.jpg';\r\n\r\nimport { } from './ItemDetails.styled';\r\n\r\nconst ItemDetails = ({item}) => {\r\n\r\n   const { poster_path, title, overview } = item;\r\n\r\n  const getYear = () => new Date(item.release_date).getFullYear();\r\n  const getScore = () => (Math.round(item.vote_average * 10) + '%');\r\n  const getGenre = () => (item.genres.map(({ name }) => name).join(', '));\r\n  return (\r\n    <>\r\n      <img\r\n      src={poster_path ? `https://image.tmdb.org/t/p/w300${poster_path}` : noimage}\r\n      alt={title}\r\n      />\r\n      <p>{title}</p>\r\n      <p>Release date: {getYear()}</p>\r\n      <p>Votes: {getScore()}</p>\r\n      <p>Genres: {getGenre()}</p>\r\n      <p>Overview {overview}</p> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemDetails\r\n","import { useParams, useLocation, Link, Outlet } from \"react-router-dom\";\r\nimport { useState, useEffect, Suspense } from 'react';\r\nimport { getMovie } from '../../services/moviesApi';\r\nimport { Section } from './MovieDetails.styled.js';\r\nimport LinkBack from \"../../components/LinkBack/LinkBack.jsx\";\r\nimport ItemDetails from \"../../components/ItemDetails/ItemDetails.jsx\";\r\n\r\n\r\nconst MovieDetails = () => {\r\n    const [item, setItem] = useState(null);\r\n    const { movieId } = useParams();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n      getMovie(movieId).then(setItem);\r\n  }, [movieId]);\r\n\r\n  if (!item) \r\n  return null;\r\n\r\n  const backLinkHref = location.state?.from ?? \"/movies\";\r\n\r\n  return (\r\n    <Section>\r\n      <LinkBack backLinkHref={backLinkHref}/>\r\n      <ItemDetails item={item}/>\r\n\r\n      <p>Additional information</p> \r\n            <ul>\r\n            <li><Link to='cast' state={location.state}>Cast</Link></li>\r\n            <li><Link to='reviews' state={location.state}>Reviews</Link></li>\r\n            <li><Link to='recommendation' state={location.state}>Recommedation</Link></li>\r\n            <li><Link to='images' state={location.state}>Images</Link></li>\r\n            </ul>\r\n            <Suspense fallback={null}>\r\n            <Outlet />\r\n            </Suspense>\r\n            \r\n    </Section>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default MovieDetails\r\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_ref","backLinkHref","_jsx","to","children","item","poster_path","title","overview","_jsxs","_Fragment","src","concat","noimage","alt","Date","release_date","getFullYear","Math","round","vote_average","genres","map","_ref2","name","join","MovieDetails","_location$state$from","_location$state","setItem","useState","movieId","useParams","location","useLocation","useEffect","getMovie","then","state","from","LinkBack","ItemDetails","Suspense","fallback","Outlet"],"sourceRoot":""}